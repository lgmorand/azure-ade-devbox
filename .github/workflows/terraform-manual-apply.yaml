name: Terraform Apply - DevBox
on:
  workflow_dispatch:
    inputs:
      DEVCENTER_NAME:
        description: 'DevCenter Name'     
        required: true
        default: 'demodevcenter'
      PROJECT_NAME:
        description: 'Project Name' 
        required: true
        default: 'demodevproject'
      location: 
        description: 'Azure Region to deploy resources'
        required: true
        default: 'northeurope'
        type: choice
        options:
          - 'northeurope'
          - 'westeurope'
          - 'francecentral'
      resource_group_name: 
        description: 'DevBox resource group to create'
        required: true
        default: 'devbox-rg'
        type: string
      principal_ids: 
        description: 'GUIDs user to access devbox portal'
        required: true
        default: '["guid"]'
        type: string
      azurecredentials: 
        description: 'sp credentials'
        required: true
        default: '{"clientId": ""\n,"clientSecret": "","subscriptionId": "","tenantId": ""}'
        type: string
jobs:
  build:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Prepare environment variables
        env:
          AZURE_CREDENTIALS: ${{ github.event.inputs.azurecredentials }}
        run: | 
          # Parse Azure secret into Terraform variables
          echo "ARM_CLIENT_ID=$( jq -r '.clientId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_CLIENT_SECRET=$( jq -r '.clientSecret' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_SUBSCRIPTION_ID=$( jq -r '.subscriptionId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_TENANT_ID=$( jq -r '.tenantId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV
          echo "TOTO=${{ vars.ARM_SUBSCRIPTION_ID }}">> $GITHUB_ENV;
        shell: bash
      - name: Use the value
        id: step_two
        run: |
          printf '%s\n' "$ARM_TENANT_ID" # This will output 'yellow'
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - uses: azure/login@v2
        with:
          creds: ${{ github.event.inputs.azurecredentials }}
      
      - name: Terraform Init
        id: init
        run: terraform -chdir=Terraform init
      - name: Use the value
        id: step_three
        run: |
          printf '%s\n' "$ARM_TENANT_ID" # This will output 'yellow'
      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_devcenter_name: ${{ github.event.inputs.DEVCENTER_NAME }}
          TF_VAR_devproject_name: ${{ github.event.inputs.PROJECT_NAME }}
          TF_VAR_subscription_id: ${{env.ARM_SUBSCRIPTION_ID}}
          TF_VAR_tenant_id: ${{env.ARM_TENANT_ID}}
          TF_VAR_location: ${{ github.event.inputs.location }}
          TF_VAR_resource_group_name: ${{ github.event.inputs.resource_group_name }}          
          TF_VAR_principal_ids: ${{ github.event.inputs.principal_ids }}
          
        run: terraform -chdir=Terraform apply -auto-approve -no-color
