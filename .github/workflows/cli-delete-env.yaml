name: CLI Delete env

on:
  workflow_dispatch:
    inputs:
      DEVCENTER_NAME:
        description: 'DevCenter Name'     
        required: true
        default: 'devcenterdemolgm'
      PROJECT_NAME:
        description: 'Project Name' 
        required: true
        default: 'DevProject'
      RESOURCE_GROUP:
        description: 'Resource Group' 
        required: true
        default: 'rg-demo-ade'
      LOCATION:
        description: 'Location' 
        required: true
        default: 'westeurope'
      KV_NAME:
        description: 'Keyvault name' 
        required: true
        default: 'kv-demoadelgm'
      ACR_NAME:
        description: 'ACR name' 
        required: true
        default: 'acrdemoadelgm'
      PAT_TOKEN:
          description: 'PAT allowing to access your Github Repo' 
          required: false
      DEMO_USER:
        description: 'User used to access the DevCenter (must NOT be a guest user)' 
        required: true
        default: 'lgmorand@lgmdemo.onmicrosoft.com'
jobs:

  Delete:
    runs-on: ubuntu-latest
    steps:
      - name: AZ Login
        run: az login --service-principal -u ${{ vars.AZ_LOGIN }} -p ${{ secrets.AZ_PASSWORD }} --tenant ${{ vars.AZ_TENANT }}
 
      - name: Prerequisites
        run: |
          # install extension silently
          az config set extension.use_dynamic_install=yes_without_prompt

          # install extension
          az extension add --name devcenter --allow-preview true

      - name: Deleting everything
        run: |
          RED="\e[31m"
          GREEN="\e[32m"
          ORANGE="\e[95m"
          ENDCOLOR="\e[0m"


          echo "deleting pools"
          az devcenter admin pool delete --pool-name "DevPool" --project-name "${{ github.event.inputs.PROJECT_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          az devcenter admin pool delete --pool-name "DevPoolPowerFull" --project-name "${{ github.event.inputs.PROJECT_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          az devcenter admin pool delete --pool-name "custom-image-dev-box-pool" --project-name "${{ github.event.inputs.PROJECT_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"

          echo "deleting devbox definitions"
          az devcenter admin devbox-definition delete --name "WebDevBox" --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          az devcenter admin devbox-definition delete --name "SuperPowerfulDevBox" --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          az devcenter admin devbox-definition delete --name "devbox-for-custom-image-with-image-builder" --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"

          echo "Deleting environments"
          az devcenter admin project-environment-type delete --environment-type-name "DEV" --project-name "${{ github.event.inputs.PROJECT_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes

          az devcenter admin environment-type delete --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --name "PROD" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          az devcenter admin environment-type delete --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --name "TEST" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          az devcenter admin environment-type delete --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --name "DEV" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"

          sleep 30

          echo "deleting project"
          az devcenter admin project delete --name "${{ github.event.inputs.PROJECT_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"

          echo "deleting Keyvault"
          az keyvault delete -n "${{ github.event.inputs.KV_NAME }}" -g ${{ github.event.inputs.RESOURCE_GROUP }} 
          az keyvault purge --name "${{ github.event.inputs.KV_NAME }}" -l ${{ github.event.inputs.LOCATION }}
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"

          echo "deleting ACR"
          az acr delete -n ${{ github.event.inputs.ACR_NAME }} -g ${{ github.event.inputs.RESOURCE_GROUP }}  --yes
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"

          echo "deleting Dev Center"
          az devcenter admin devcenter delete --name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --yes
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"

          echo "deleting RG"
          az group delete -n ${{ github.event.inputs.RESOURCE_GROUP }} --yes
          printf $"${GREEN}\u2714 Success ${ENDCOLOR}\n\n"
